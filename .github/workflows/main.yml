# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Main CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
permissions:
  contents: read

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

jobs:
  projects-test-CI:
    runs-on: ubuntu-latest
    name: Projects Test Runner
    strategy:
      matrix:
        projectPaths:
          - "Domain.Persistence.Test"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
          dotnet-quality: "preview"
      # service tests
      - name: Run Tests
        run: |
          for path in ${{ join( matrix.projectPaths , ' ')}} }}; do
            echo "Tests Start for $path"
            cd ${{ github.workspace }}/backend/$path && dotnet restore
            cd ${{ github.workspace }}/backend/$path && dotnet build --no-restore
            cd ${{ github.workspace }}/backend/$path && dotnet test --no-build --verbosity normal
            echo "Tests Finished for $path"
          done
  backend-api-service:
    runs-on: ubuntu-latest
    needs: [ projects-test-CI , frontend-platforms ]
    name: Backend Api Validation & Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
          dotnet-quality: "preview"
      # build and compile
      - name: Restore dependencies
        run: cd ${{ github.workspace }}/backend/Services/BackendApi && dotnet restore
      - name: Build
        run: cd ${{ github.workspace }}/backend/Services/BackendApi && dotnet build --no-restore
  frontend-platforms:
    name: Frontend Platform Build - ClientFront
    needs: [ frontend-platforms-test-CI ]
    runs-on: macos-latest
    permissions:
      contents: "read"
      actions: "read"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          architecture: x64
      - name: Install dependencies
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter pub get
      - name: Build appbundle
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter build appbundle
      - name: Build APK
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter build apk
      - name: Build IOS
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter build ios --release --no-codesig
      - name: Build WEB
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter build web
  frontend-platforms-test-CI:
    name: Frontend Platform Test - ClientFront
    runs-on: macos-latest
    permissions:
      contents: "read"
      actions: "read"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          architecture: x64
      - name: Install dependencies
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter pub get
      - name: Run Test
        run: cd ${{ github.workspace }}/frontend/clientFront && flutter test
