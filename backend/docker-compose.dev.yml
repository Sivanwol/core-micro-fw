version: "3.3"

services:
  front-api-service:
    container_name: front-api-container
    build:
      context: .
      dockerfile: ./Services/FrontApi/frontApi.dev.Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMqSettings:Host=rabbitmq
      - ElasticApm:ServerUrls=http://elasticsearch:9200
      - ElasticsearchSettings:Uri=http://elasticsearch:9200
      - ConnectionStrings:DbConnection="Server=db;Database=platform;User Id=developer;Password=developer123!;MultipleActiveResultSets=true;TrustServerCertificate=True"
    extends:
      file: docker-compose.base.yml
      service: front-api-service
    restart: unless-stopped
    command: ["dotnet", "ef", "database update"]
    ports:
      - "8000:8000"
    volumes:
      - front-api-service:/usr/src/app/front_api_service
  db:
    extends:
      file: docker-compose.base.yml
      service: db
    environment:
      - SA_PASSWORD=developer123!
      - ACCEPT_EULA=Y
  rabbitmq:
    hostname: rabbitmq
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
  redis:
    hostname: redis
    extends:
      file: docker-compose.base.yml
      service: redis
    volumes:
      - redis_data:/var/lib/redis:/data
  elasticsearch:
    hostname: elasticsearch
    extends:
      file: docker-compose.base.yml
      service: elasticsearch

volumes:
  db_data:
    driver: local
  local_es:
    driver: local
  redis_data:
    driver: local
  front-api-service:
    driver: local

networks:
  gateway_network:
    driver: bridge
